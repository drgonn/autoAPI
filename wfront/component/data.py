import os
def w_component_data(root,ojson):
	appname = ojson.get('app')
	databases = ojson.get('databases')
	routes = ojson.get('routes')
	databases_dir = {i['table'] : i for i in databases}

	component_name = 'table'
	os.makedirs(os.path.join(root,f'{appname}/front/src/pages/{component_name}'),exist_ok=True)
	initdir = os.path.join(root,f'{appname}/front/src/pages/{component_name}/data.d.ts')
	w = open(initdir,'w+')
	w.write(f"export interface TableListItem {{")
	for route in routes:
		route.query
	w.write(f"  // key: number;")
	w.write(f"  // disabled?: boolean;")
	w.write(f"  // href: string;")
	w.write(f"  ts_code: string;")
	w.write(f"  name: string;")
	w.write(f"  // owner: string;")
	w.write(f"  // desc: string;")
	w.write(f"  // callNo: number;")
	w.write(f"  // status: string;")
	w.write(f"  // updatedAt: Date;")
	w.write(f"  // createdAt: Date;")
	w.write(f"  // progress: number;")
	w.write(f"}}")
	w.write(f"")
	w.write(f"export interface TableListPagination {{")
	w.write(f"  total: number;")
	w.write(f"  pageSize: number;")
	w.write(f"  current: number;")
	w.write(f"}}")
	w.write(f"")
	w.write(f"export interface TableListData {{")
	w.write(f"  list: TableListItem[];")
	w.write(f"  pagination: Partial<TableListPagination>;")
	w.write(f"}}")
	w.write(f"")
	w.write(f"export interface TableListParams {{")
	w.write(f"  status?: string;")
	w.write(f"  name?: string;")
	w.write(f"  desc?: string;")
	w.write(f"  key?: number;")
	w.write(f"  pageSize?: number;")
	w.write(f"  currentPage?: number;")
	w.write(f"  filter?: {{ [key: string]: any[] }};")
	w.write(f"  sorter?: {{ [key: string]: any }};")
	w.write(f"}}")
